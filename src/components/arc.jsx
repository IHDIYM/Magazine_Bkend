/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\arc.glb -o arc.jsx -k 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import FakeGlowMaterial from './FakeGlowMaterial'
import * as THREE from 'three'

export function Model({ glowProps = {}, ...props }) {
  const { nodes, materials } = useGLTF('/arc.glb')
  const ringRef = useRef()
  
  // Create wireframe materials
  const baseMaterial = new THREE.MeshBasicMaterial({
    color: '#000000',
    wireframe: true,
    wireframeLinewidth: 1
  })
  
  const onMaterial = new THREE.MeshBasicMaterial({
    color: "#D91656",
    wireframe: true,
    wireframeLinewidth: 1
  })

  // Default glow properties
  const defaultGlowProps = {
    falloff: 0,
    glowInternalRadius: 0.5,
    glowColor: "#9336B4",
    glowSharpness: 2.5,
    side: "THREE.FrontSide",
    opacity: 2.0,
    depthTest: false,
    ...glowProps
  }

  return (
    <group {...props} dispose={null}>
      <mesh 
        ref={ringRef}
        name="ring" 
        geometry={nodes.ring.geometry} 
        position={[-847.888, 0, 85.991]} 
        rotation={[-Math.PI / 2, 0, 0]} 
      >
        <FakeGlowMaterial {...defaultGlowProps} />
      </mesh>
      <mesh name="base" geometry={nodes.base.geometry} material={baseMaterial} position={[-847.888, 0, 85.991]} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh name="on" geometry={nodes.on.geometry} material={onMaterial} position={[-847.888, 0, 85.991]} rotation={[-Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/arc.glb')
